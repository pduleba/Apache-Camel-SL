<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- this is the JDBC data source Config for postgresql database -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost/demo?allowMultiQueries=true" />
		<property name="username" value="demo" />
		<property name="password" value="demo" />
	</bean>

	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<camelContext trace="false" id="CustInfoCamelContext"
		xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder location="classpath:sql.properties"
			id="properties" />
		<route id="CustInfoRoute">
			<from uri="activemq:queue:customer" />
			<unmarshal>
				<jaxb contextPath="com.pduleba.loan.broker.xsd" partClass="com.pduleba.loan.broker.xsd.CustInfo" />
			</unmarshal>
			<setHeader headerName="custNationalID">
				<simple>${body.nationalID}</simple>
			</setHeader>
			<setHeader headerName="firstName">
				<simple>${body.firstName}</simple>
			</setHeader>
			<setHeader headerName="lastName">
				<simple>${body.lastName}</simple>
			</setHeader>
			<setHeader headerName="age">
				<simple>${body.age}</simple>
			</setHeader>
			<setHeader headerName="occupation">
				<simple>${body.occupation}</simple>
			</setHeader>
			<log
				message="DATA :: NationalID = ${body.nationalID} # FirstName = ${body.firstName} # LastName = ${body.lastName} # Age = ${body.age} # Occupation = ${body.occupation}" />
			<to
				uri="sql:delete from demo.CustInfo where nationalID = :#custNationalID; INSERT INTO demo.CustInfo (nationalID, firstName, lastName, age, occupation) values (:#custNationalID, :#firstName, :#lastName, :#age, :#occupation);"
				id="mysql:insertCustInfo" />
			<log message="Data inserted into DB" />
		</route>
	</camelContext>

</beans>
